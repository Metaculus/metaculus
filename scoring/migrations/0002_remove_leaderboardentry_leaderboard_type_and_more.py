# Generated by Django 5.0.6 on 2024-07-03 23:40

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0002_remove_project_leaderboard_type'),
        ('scoring', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveField(
            model_name='leaderboardentry',
            name='leaderboard_type',
        ),
        migrations.RemoveField(
            model_name='leaderboardentry',
            name='project',
        ),
        migrations.AddField(
            model_name='leaderboardentry',
            name='prize',
            field=models.FloatField(null=True),
        ),
        migrations.AlterField(
            model_name='leaderboardentry',
            name='calculated_on',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.CreateModel(
            name='Leaderboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('edited_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200, null=True)),
                ('score_type', models.CharField(choices=[('relative_legacy_tournament', 'Relative Legacy Tournament'), ('peer_global', 'Peer Global'), ('peer_global_legacy', 'Peer Global Legacy'), ('peer_tournament', 'Peer Tournament'), ('spot_peer_tournament', 'Spot Peer Tournament'), ('baseline_global', 'Baseline Global'), ('comment_insight', 'Comment Insight'), ('question_writing', 'Question Writing')], max_length=200)),
                ('start_time', models.DateTimeField(null=True)),
                ('end_time', models.DateTimeField(null=True)),
                ('finalize_time', models.DateTimeField(null=True)),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='leaderboards', to='projects.project')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='leaderboardentry',
            name='leaderboard',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='scoring.leaderboard'),
        ),
        migrations.CreateModel(
            name='MedalExclusionRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(null=True)),
                ('exclusion_type', models.CharField(choices=[('staff', 'Staff'), ('project_owner', 'Project Owner')], max_length=200)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
