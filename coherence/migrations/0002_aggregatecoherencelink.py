# Generated by Django 5.1.10 on 2025-09-22 17:02

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models
from django.db.backends.base.schema import BaseDatabaseSchemaEditor
from django.db.migrations.state import StateApps


def create_new_aggregate_links(apps: StateApps, schema_editor: BaseDatabaseSchemaEditor) -> None:
    CoherenceLink = apps.get_model("coherence", "CoherenceLink")
    aggregate_coherence_link = apps.get_model("coherence", "AggregateCoherenceLink")

    coherence_links = CoherenceLink.objects.select_related('question1', 'question2').all()
    links_map = {}
    for link in coherence_links:
        key = f"{link.question1.id},{link.question2.id},{link.type}"
        links_map[key] = link

    aggregate_links_to_create = []
    for link in links_map.values():
        aggregate_links_to_create.append(
            aggregate_coherence_link(
                question1=link.question1,
                question2=link.question2,
                type=link.type,
            )
        )

    aggregate_coherence_link.objects.bulk_create(aggregate_links_to_create)


def undo_create_new_aggregate_links(apps: StateApps, schema_editor: BaseDatabaseSchemaEditor) -> None:
    aggregate_coherence_link = apps.get_model("coherence", "AggregateCoherenceLink")
    aggregate_coherence_link.objects.all().delete()


class Migration(migrations.Migration):
    dependencies = [
        ("coherence", "0001_initial"),
        ("questions", "0029_question_default_aggregation_method"),
    ]

    operations = [
        migrations.CreateModel(
            name="AggregateCoherenceLink",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("edited_at", models.DateTimeField(editable=False, null=True)),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "type",
                    models.CharField(choices=[("causal", "Causal")], max_length=16),
                ),
                (
                    "question1",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="aggregate_coherence_links_as_q1",
                        to="questions.question",
                    ),
                ),
                (
                    "question2",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="aggregate_coherence_links_as_q2",
                        to="questions.question",
                    ),
                ),
            ],
            options={
                "constraints": [
                    models.UniqueConstraint(
                        fields=("question1", "question2"),
                        name="aggregate_unique_question_pair",
                    ),
                    models.CheckConstraint(
                        condition=models.Q(
                            ("question1", models.F("question2")), _negated=True
                        ),
                        name="aggregate_different_questions",
                    ),
                ],
            },
        ),
        migrations.RunPython(
            create_new_aggregate_links,
            undo_create_new_aggregate_links,
        ),
    ]
