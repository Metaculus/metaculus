# Generated by Django 5.0.6 on 2024-07-01 18:43

import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("projects", "__first__"),
        ("questions", "__first__"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Notebook",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("edited_at", models.DateTimeField(auto_now=True)),
                ("markdown", models.TextField()),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("discussion", "Discussion"),
                            ("news", "News"),
                            ("public_figure", "Public Figure"),
                        ],
                        max_length=100,
                    ),
                ),
                ("news_type", models.CharField(blank=True, max_length=100)),
                ("image_url", models.URLField(blank=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Post",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("edited_at", models.DateTimeField(auto_now=True)),
                (
                    "curation_status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("pending", "Pending"),
                            ("rejected", "Rejected"),
                            ("approved", "Approved"),
                            ("deleted", "Deleted"),
                        ],
                        db_index=True,
                        default="draft",
                        max_length=20,
                    ),
                ),
                (
                    "curation_status_updated_at",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("title", models.CharField(max_length=200)),
                (
                    "published_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                ("aim_to_close_at", models.DateTimeField(blank=True, null=True)),
                ("aim_to_resolve_at", models.DateTimeField(blank=True, null=True)),
                ("actual_close_time", models.DateTimeField(blank=True, null=True)),
                ("resolved", models.BooleanField(default=False)),
                (
                    "maybe_try_to_resolve_at",
                    models.DateTimeField(
                        db_index=True,
                        default=datetime.datetime(
                            9999,
                            12,
                            31,
                            23,
                            59,
                            59,
                            999999,
                            tzinfo=datetime.timezone.utc,
                        ),
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="posts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "conditional",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="post",
                        to="questions.conditional",
                    ),
                ),
                (
                    "curated_last_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="approved_questions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "default_project",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="default_posts",
                        to="projects.project",
                    ),
                ),
                (
                    "group_of_questions",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="post",
                        to="questions.groupofquestions",
                    ),
                ),
                (
                    "notebook",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="post",
                        to="posts.notebook",
                    ),
                ),
                (
                    "projects",
                    models.ManyToManyField(
                        blank=True, related_name="posts", to="projects.project"
                    ),
                ),
                (
                    "question",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="post",
                        to="questions.question",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Vote",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "direction",
                    models.SmallIntegerField(choices=[(1, "Up"), (-1, "Down")]),
                ),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="votes",
                        to="posts.post",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="votes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="vote",
            constraint=models.UniqueConstraint(
                fields=("user_id", "post_id"), name="votes_unique_user_question"
            ),
        ),
    ]
