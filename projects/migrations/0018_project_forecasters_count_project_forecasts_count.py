# Generated by Django 5.1.9 on 2025-05-29 22:42
import logging

from django.db import migrations, models
from django.db.models import Q, Sum, Exists, OuterRef

from utils.models import ModelBatchUpdater

logger = logging.getLogger(__name__)


def migrate_project_counters(apps, schema_editor):
    Project = apps.get_model("projects", "Project")
    PostUserSnapshot = apps.get_model("posts", "PostUserSnapshot")
    Post = apps.get_model("posts", "Post")
    batch_size = 100

    qs = Project.objects.filter(
        type__in=(
            "site_main",
            "community",
            "tournament",
            "question_series",
            "index",
        )
    )
    total = qs.count()

    logger.info(f"Start computing counters for {total} projects")

    with ModelBatchUpdater(
        model_class=Project,
        fields=["forecasts_count", "forecasters_count"],
        batch_size=batch_size,
    ) as updater:
        for idx, project in enumerate(qs.iterator(chunk_size=batch_size)):
            project.forecasters_count = (
                PostUserSnapshot.objects.filter(
                    last_forecast_date__isnull=False,
                )
                .filter(Q(post__default_project=project) | Q(post__projects=project))
                .values("user_id")
                .distinct()
                .count()
            )
            project.forecasts_count = (
                Post.objects.filter(
                    Q(default_project=project)
                    | Exists(
                        Post.projects.through.objects.filter(
                            post_id=OuterRef("pk"), project=project
                        )
                    )
                ).aggregate(total_forecasts=Sum("forecasts_count"))["total_forecasts"]
                or 0
            )
            updater.append(project)

            if idx % batch_size == 0:
                logger.info(f"Generated counters for {idx}/{total} projects")


class Migration(migrations.Migration):
    dependencies = [
        ("projects", "0017_remove_project_section"),
    ]

    operations = [
        migrations.AddField(
            model_name="project",
            name="forecasters_count",
            field=models.PositiveIntegerField(default=0, editable=False),
        ),
        migrations.AddField(
            model_name="project",
            name="forecasts_count",
            field=models.PositiveIntegerField(default=0, editable=False),
        ),
        migrations.AddField(
            model_name="project",
            name="show_on_services_page",
            field=models.BooleanField(
                db_index=True,
                default=False,
                help_text="Show project on the Services page.",
            ),
        ),
        migrations.RunPython(migrate_project_counters, migrations.RunPython.noop),
    ]
