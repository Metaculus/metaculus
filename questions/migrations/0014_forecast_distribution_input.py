# Generated by Django 5.1.4 on 2025-01-24 08:31
import logging

from django.db import migrations, models

logger = logging.getLogger(__name__)


def convert_slider_values_to_distribution(values: dict) -> dict:
    distribution_input = {"type": "slider", "components": []}

    for idx, forecast in enumerate(values.get("forecast")):
        weight = values["weights"][idx]

        distribution_input["components"].append(
            {
                "weight": weight,
                "left": forecast["left"],
                "right": forecast["right"],
                "center": forecast["center"],
            }
        )

    return distribution_input


def migrate_distribution_input_field(apps, schema_editor):
    Forecast = apps.get_model("questions", "Forecast")
    qs = Forecast.objects.filter(slider_values__isnull=False)

    total = qs.count()
    to_update = []
    chunk_size = 10_000

    logger.info(f"Updating distribution input for {total} forecasts")

    for idx, forecast in enumerate(
        qs.only("distribution_input", "slider_values").iterator(chunk_size=chunk_size)
    ):

        forecast.distribution_input = convert_slider_values_to_distribution(
            forecast.slider_values
        )
        to_update.append(forecast)

        if idx % chunk_size == 0:
            Forecast.objects.bulk_update(to_update, fields=["distribution_input"])
            to_update = []

            logger.info(f"Processed {idx}/{total} forecasts")

    Forecast.objects.bulk_update(to_update, fields=["distribution_input"])


class Migration(migrations.Migration):
    dependencies = [
        ("questions", "0013_forecast_source"),
    ]

    operations = [
        migrations.AddField(
            model_name="forecast",
            name="distribution_input",
            field=models.JSONField(null=True),
        ),
        migrations.RunPython(
            migrate_distribution_input_field, migrations.RunPython.noop
        ),
    ]
