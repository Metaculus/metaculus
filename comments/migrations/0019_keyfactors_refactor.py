# Generated by Django 5.1.10 on 2025-10-01 16:25

import logging

import django.utils.timezone
from django.db import migrations, models

logger = logging.getLogger(__name__)


def driver_migration(apps, schema_editor):
    KeyFactor = apps.get_model("comments", "KeyFactor")
    KeyFactorDriver = apps.get_model("comments", "KeyFactorDriver")
    key_factors = KeyFactor.objects.all()

    drivers = []

    for key_factor in key_factors:
        driver = KeyFactorDriver(
            content_original_lang=key_factor.content_original_lang,
            is_automatically_translated=key_factor.is_automatically_translated,
            content_last_md5=key_factor.content_last_md5,
            created_at=key_factor.created_at,
            edited_at=key_factor.edited_at,
            text=key_factor.text,
            text_original=key_factor.text_original,
            text_en=key_factor.text_en,
            text_es=key_factor.text_es,
            text_zh=key_factor.text_zh,
            text_zh_TW=key_factor.text_zh_TW,
            text_pt=key_factor.text_pt,
        )
        key_factor.driver = driver
        drivers.append(driver)

    KeyFactorDriver.objects.bulk_create(drivers)
    KeyFactor.objects.bulk_update(key_factors, fields=["driver"])
    logger.info(f"Migrated {len(drivers)} drivers")


def driver_migration_reverse(apps, schema_editor):
    KeyFactor = apps.get_model("comments", "KeyFactor")
    KeyFactorDriver = apps.get_model("comments", "KeyFactorDriver")

    key_factors = []
    fields = [
        "content_original_lang",
        "is_automatically_translated",
        "content_last_md5",
        "text",
        "text_original",
        "text_en",
        "text_es",
        "text_zh",
        "text_zh_TW",
        "text_pt",
    ]

    for driver in KeyFactorDriver.objects.filter(key_factor__isnull=False):
        for field in fields:
            setattr(driver.key_factor, field, getattr(driver, field))

        key_factors.append(driver.key_factor)

    KeyFactor.objects.bulk_update(key_factors, fields=fields)


class Migration(migrations.Migration):
    dependencies = [
        ("comments", "0018_rename_key_factors"),
    ]

    operations = [
        migrations.RenameModel(
            old_name="Driver",
            new_name="KeyFactor",
        ),
        migrations.RenameModel(
            old_name="DriverVote",
            new_name="KeyFactorVote",
        ),
        migrations.RenameIndex(
            model_name="keyfactorvote",
            new_name="comments_ke_key_fac_5e8be8_idx",
            old_name="comments_dr_key_fac_8375c5_idx",
        ),
        migrations.CreateModel(
            name="KeyFactorDriver",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content_last_md5",
                    models.CharField(blank=True, max_length=32, null=True),
                ),
                (
                    "content_original_lang",
                    models.CharField(blank=True, max_length=16, null=True),
                ),
                ("is_automatically_translated", models.BooleanField(default=True)),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("edited_at", models.DateTimeField(editable=False, null=True)),
                (
                    "impact_direction",
                    models.CharField(
                        blank=True,
                        choices=[("increase", "Increase"), ("decrease", "Decrease")],
                        null=True,
                    ),
                ),
                ("text", models.TextField(blank=True)),
                ("text_original", models.TextField(blank=True, null=True)),
                ("text_en", models.TextField(blank=True, null=True)),
                ("text_cs", models.TextField(blank=True, null=True)),
                ("text_es", models.TextField(blank=True, null=True)),
                ("text_zh", models.TextField(blank=True, null=True)),
                ("text_zh_TW", models.TextField(blank=True, null=True)),
                ("text_pt", models.TextField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="keyfactor",
            name="driver",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="key_factor",
                to="comments.keyfactordriver",
            ),
        ),
        migrations.AddField(
            model_name="keyfactor",
            name="question",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="key_factors",
                to="questions.question",
            ),
        ),
        migrations.AddField(
            model_name="keyfactor",
            name="question_option",
            field=models.CharField(blank=True, default="", max_length=32),
        ),
        # Populate Driver Model
        migrations.RunPython(driver_migration, driver_migration_reverse),
        # Drop old KeyFactor fields
        migrations.RemoveField(
            model_name="keyfactor",
            name="content_last_md5",
        ),
        migrations.RemoveField(
            model_name="keyfactor",
            name="content_original_lang",
        ),
        migrations.RemoveField(
            model_name="keyfactor",
            name="is_automatically_translated",
        ),
        migrations.RemoveField(
            model_name="keyfactor",
            name="text",
        ),
        migrations.RemoveField(
            model_name="keyfactor",
            name="text_cs",
        ),
        migrations.RemoveField(
            model_name="keyfactor",
            name="text_en",
        ),
        migrations.RemoveField(
            model_name="keyfactor",
            name="text_es",
        ),
        migrations.RemoveField(
            model_name="keyfactor",
            name="text_original",
        ),
        migrations.RemoveField(
            model_name="keyfactor",
            name="text_pt",
        ),
        migrations.RemoveField(
            model_name="keyfactor",
            name="text_zh",
        ),
        migrations.RemoveField(
            model_name="keyfactor",
            name="text_zh_TW",
        ),
        # No real db effect
        migrations.AlterField(
            model_name="keyfactorvote",
            name="score",
            field=models.SmallIntegerField(db_index=True),
        ),
        migrations.AlterField(
            model_name="keyfactorvote",
            name="vote_type",
            field=models.CharField(
                choices=[("strength", "Strength"), ("up_down", "Up Down")],
                default="up_down",
                max_length=20,
            ),
        ),
    ]
